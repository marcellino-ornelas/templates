"use strict";(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[307],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var a=t(96540);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=s(t),m=l,d=g["".concat(p,".").concat(m)]||g[m]||u[m]||o;return t?a.createElement(d,r(r({ref:n},c),{},{components:t})):a.createElement(d,r({ref:n},c))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var o=t.length,r=new Array(o);r[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[g]="string"==typeof e?e:l,r[1]=i;for(var s=2;s<o;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},83167:(e,n,t)=>{t.d(n,{R:()=>o});var a=t(96540),l=t(41622);const o=e=>{let{children:n,open:t=!1,title:o=""}=e;const r=o?`Example: ${o}`:"Example";return a.createElement(l.A,{summary:r,open:t},a.createElement("div",null,n))}},41622:(e,n,t)=>{t.d(n,{A:()=>d});var a=t(58168),l=t(96540),o=t(20053),r=t(92303),i=t(41422);const p={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};function s(e){return!!e&&("SUMMARY"===e.tagName||s(e.parentElement))}function c(e,n){return!!e&&(e===n||c(e.parentElement,n))}function g(e){let{summary:n,children:t,...g}=e;const u=(0,r.A)(),m=(0,l.useRef)(null),{collapsed:d,setCollapsed:y}=(0,i.u)({initialState:!g.open}),[h,b]=(0,l.useState)(g.open),f=l.isValidElement(n)?n:l.createElement("summary",null,n??"Details");return l.createElement("details",(0,a.A)({},g,{ref:m,open:h,"data-collapsed":d,className:(0,o.A)(p.details,u&&p.isBrowser,g.className),onMouseDown:e=>{s(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const n=e.target;s(n)&&c(n,m.current)&&(e.preventDefault(),d?(y(!1),b(!0)):y(!0))}}),f,l.createElement(i.N,{lazy:!1,collapsed:d,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{y(e),b(!e)}},l.createElement("div",{className:p.collapsibleContent},t)))}const u={details:"details_b_Ee"},m="alert alert--info";function d(e){let{...n}=e;return l.createElement(g,(0,a.A)({},n,{className:(0,o.A)(m,u.details,n.className)}))}},31965:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var a=t(58168),l=(t(96540),t(15680)),o=t(83167);const r={sidebar_position:4},i="Templates CLI",p={unversionedId:"api/cli",id:"api/cli",title:"Templates CLI",description:"Init",source:"@site/docs/api/cli.mdx",sourceDirName:"api",slug:"/api/cli",permalink:"/templates/docs/api/cli",draft:!1,editUrl:"https://github.com/marcellino-ornelas/templates/tree/master/docs/docs/api/cli.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"api",previous:{title:"Template Context",permalink:"/templates/docs/api/template-context"},next:{title:"Templates Configuration",permalink:"/templates/docs/api/tpsrc/"}},s={},c=[{value:"Init",id:"init",level:2},{value:"Initializing a repo",id:"initializing-a-repo",level:4},{value:"Initializing tps globally",id:"initializing-tps-globally",level:4},{value:"Forcing a repo",id:"forcing-a-repo",level:4},{value:"List",id:"list",level:2},{value:"Copy",id:"copy",level:2},{value:"Create",id:"create",level:2},{value:"Single build path",id:"single-build-path",level:4},{value:"Long build path",id:"long-build-path",level:4},{value:"Multiple build paths",id:"multiple-build-paths",level:4},{value:"new",id:"new",level:2},{value:"new template",id:"new-template",level:3},{value:"new package",id:"new-package",level:3}],g={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,l.yg)(u,(0,a.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"templates-cli"},"Templates CLI"),(0,l.yg)("h2",{id:"init"},"Init"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"tps init\n\nInitialize local settings\n\nOptions:\n  --version      Show version number                                   [boolean]\n  --verbose, -v  More in-depth logging                [boolean] [default: false]\n  --help         Show help                                             [boolean]\n  --force, -f    Initialize tps in cwd no matter what                  [boolean]\n  --global, -g   Initialize tps globally                               [boolean]\n")),(0,l.yg)("p",null,"Initialize your repo as a tps repo. This will allow you to set tps template\nsettings and build templates for your repo. This command will create a ",(0,l.yg)("inlineCode",{parentName:"p"},".tps"),"\nfolder and a ",(0,l.yg)("inlineCode",{parentName:"p"},".tpsrc")," file inside of it."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"| - .tps/\n    | - .tpsrc\n")),(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"Tps will throw an error if you try to initialize a child directory when a parent\ndirectory is already initialized. If you would like to do this anyways see\n",(0,l.yg)("a",{parentName:"p",href:"#forcing-a-repo"},"forcing a repo"),".")),(0,l.yg)("h4",{id:"initializing-a-repo"},"Initializing a repo"),(0,l.yg)("p",null,"First navigate into the directory that you wish to initialize local settings."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"cd some/path/to/repo\n")),(0,l.yg)("p",null,"Initialize template settings"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps init\n")),(0,l.yg)("hr",null),(0,l.yg)("h4",{id:"initializing-tps-globally"},"Initializing tps globally"),(0,l.yg)("p",null,"use the ",(0,l.yg)("inlineCode",{parentName:"p"},"--global")," flag when you want tps to be initialized globally. This will\nplace the ",(0,l.yg)("inlineCode",{parentName:"p"},".tps")," folder and ",(0,l.yg)("inlineCode",{parentName:"p"},".tpsrc")," file in your home directory"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps init --global\n")),(0,l.yg)("hr",null),(0,l.yg)("h4",{id:"forcing-a-repo"},"Forcing a repo"),(0,l.yg)("p",null,"use the force flag when you want a repo to be initialized but a parent directory\nis already initialized"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps init --force\n")),(0,l.yg)("h2",{id:"list"},"List"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"tps list\n\nShow all available templates\n\nOptions:\n  --version      Show version number                                   [boolean]\n  --verbose, -v  More in-depth logging                [boolean] [default: false]\n  --help         Show help                                             [boolean]\n  --global, -g   List out global files                 [boolean] [default: true]\n  --local, -l    List out global files                 [boolean] [default: true]\n")),(0,l.yg)("p",null,"List all available templates that you can use. ",(0,l.yg)("inlineCode",{parentName:"p"},"local")," refers to local\ntemplates, which are templates available in your current working directory\n(cwd). ",(0,l.yg)("inlineCode",{parentName:"p"},"global")," stands for global templates, accessible from anywhere on your\nsystem."),(0,l.yg)(o.R,{mdxType:"Example"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"> tps list\nGlobal:\n- react-component\nLocal:\n- new-test\n- new-api\n"))),(0,l.yg)("h2",{id:"copy"},"Copy"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"cli copy <template>\n\nCopy a template\n\nOptions:\n  --version      Show version number                                   [boolean]\n  --verbose, -v  More in-depth logging                [boolean] [default: false]\n  --help         Show help                                             [boolean]\n")),(0,l.yg)("p",null,"Copy a template to your local tps directory. Files can then be changed to fit\nusers needs."),(0,l.yg)("admonition",{type:"tip"},(0,l.yg)("p",{parentName:"admonition"},"Useful when you like the template but want to add additional features or make a\nfew modifications")),(0,l.yg)(o.R,{mdxType:"Example"},(0,l.yg)("p",null,"Copy Templates default ",(0,l.yg)("a",{parentName:"p",href:"../main/templates/react-component"},(0,l.yg)("inlineCode",{parentName:"a"},"react-component")),"."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"> tps copy react-component\n")),(0,l.yg)("p",null,"Produces:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"| - <cwd>\n    | - .tps/\n        | - react-component/\n            | - <all packages and files from react-component template>\n"))),(0,l.yg)("h2",{id:"create"},"Create"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"tps [use] [buildPaths...]\n\nrender a new instance from a template\n\nOptions:\n  --version        Show version number                                 [boolean]\n  --verbose, -v    More in-depth logging              [boolean] [default: false]\n  --help           Show help                                           [boolean]\n  --use, -u        Template package to create your with                 [string]\n  --packages, -p   Additional Packages to use when building your template[array]\n  --default, -d    Use all default answers to all prompts              [boolean]\n  --newFolder, -f  Create a new folder                 [boolean] [default: true]\n  --force          force the template to be made. This will override any files\n                   that tps needs to create                            [boolean]\n  --wipe           force the template to be made. This will delete the directory\n                   if exists                                           [boolean]\n")),(0,l.yg)("p",null,"Render a new instance of a template."),(0,l.yg)("admonition",{type:"tip"},(0,l.yg)("p",{parentName:"admonition"},"Checkout out the ",(0,l.yg)("a",{parentName:"p",href:"./template#options"},"Template Options API")," for more information\nabout template options")),(0,l.yg)("h4",{id:"single-build-path"},"Single build path"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps react-component Nav\n")),(0,l.yg)("h4",{id:"long-build-path"},"Long build path"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps react-component components/Nav\n")),(0,l.yg)("h4",{id:"multiple-build-paths"},"Multiple build paths"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps react-component components/Nav components/Button pages/Home\n")),(0,l.yg)("h2",{id:"new"},"new"),(0,l.yg)("h3",{id:"new-template"},"new template"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps new template <template>\n\ncreate a new template\n\nOptions:\n  --version      Show version number                                   [boolean]\n  --verbose, -v  More in-depth logging                [boolean] [default: false]\n  --help         Show help                                             [boolean]\n")),(0,l.yg)(o.R,{mdxType:"Example"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps new template react-component\n")),(0,l.yg)("p",null,"Produces:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"| - .tps\n    // highlight-start\n    | - react-component/\n        | - default/\n        | - settings.json\n    // highlight-end\n"))),(0,l.yg)("h3",{id:"new-package"},"new package"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps new package <template> <package>\n\ncreate a new package in a template\n\nOptions:\n  --version      Show version number                                   [boolean]\n  --verbose, -v  More in-depth logging                [boolean] [default: false]\n  --help         Show help                                             [boolean]\n")),(0,l.yg)(o.R,{mdxType:"Example"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"tps new package react-component css\n")),(0,l.yg)("p",null,"Produces:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-text"},"| - .tps\n    | - react-component/\n        // highlight-next-line\n        | - css/\n        | - default/\n        | - <other files or directories...>\n"))))}m.isMDXComponent=!0}}]);