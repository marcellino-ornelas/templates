(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[543],{80543:e=>{e.exports={opts:{experimentalTemplateEngine:!0},prompts:[{name:"export",description:"Type of export that will be used in your component",message:"Would you like a default export or named export?",type:"list",tpsType:"data",choices:["default","named"],default:"default",hidden:!0},{name:"inlineDefaultExport",description:"Places the default export on the same line as the component, if export is default.",message:"Would you like your default export on the same line as your component?",type:"confirm",tpsType:"data",hidden:!0,default:!1},{name:"functionStyle",description:"Type of function that will be used in your component",message:"Would you like a arrow function or a function declaration for your component?",type:"list",tpsType:"data",choices:["function","arrow"],hidden:!0,default:"function"},{name:"typescript",description:"Generate the component in TypeScript",aliases:["t"],type:"confirm",tpsType:"data",message:"Would you like to use typescript",default:!1},{name:"extension",description:"Extension that will be used for the component file",message:"What type of extension do you want for your component?",aliases:["e","ext","extention"],type:"input",tpsType:"data",default:e=>e.typescript?"tsx":"jsx"},{name:"css",description:"Generate a css file for the component",message:"Would you like to include a css file?",aliases:["c"],type:"confirm",tpsType:"package",default:!0},{name:"cssExtension",description:"Extension that will be used for the css file",aliases:["cssType","cssExt"],tpsType:"data",type:"input",message:"What type of css extension would you like?",when:e=>!!e.css,default:"css"},{name:"test",description:"Generate a test file for the component",type:"confirm",tpsType:"package",message:"Would you like to include unit tests?",default:!1},{name:"reactTestingLibrary",description:"Use react testing library in the test file",message:"Would you like to use @testing-library/react in your test file?",type:"confirm",tpsType:"data",when:e=>!!e.test,hidden:!0,default:!0},{name:"jestDomImport",description:"Add a @testing-library/jest-dom import statement to the test file",type:"confirm",tpsType:"data",message:"Would you like a @testing-library/jest-dom import?",when:e=>!!e.reactTestingLibrary,hidden:!0,default:!1},{name:"testExtension",description:"Extension that will be used for the test file",message:"What type of test extension would you like?",aliases:["testType","testExt"],tpsType:"data",type:"input",when:e=>!!e.test,default:e=>`test.${e.extension}`},{name:"index",description:"Generate a index file for the component",message:"Would you like to include a index file?",aliases:["i"],type:"confirm",tpsType:"package",default:!0},{name:"indexExtension",description:"Extension that will be used for the index file",message:"What type of extension would you like for your index file?",aliases:["indexExt"],tpsType:"data",type:"input",hidden:!0,when:e=>!!e.index,default:e=>/^(t|j)sx$/.test(e.extension)?e.extension.slice(0,-1):e.extension},{name:"indexExportPattern",description:"Type of export pattern that will be used for the index file",message:"What type of export pattern do you want for your index file?",aliases:["i"],type:"list",tpsType:"data",hidden:!0,choices:["shorthand","explicit"],default:"shorthand"},{name:"component",description:"Element or component that will be returned in the component file",message:"What component would you like as the base component?",hidden:!0,type:"confirm",tpsType:"data",default:"div"},{name:"storybook",description:"Generate a storybook file for the component",message:"Would you like to include a storybook file?",aliases:["s","story"],hidden:!0,type:"confirm",tpsType:"package",default:!1}]}}}]);