(self.webpackChunkdocs_v_2=self.webpackChunkdocs_v_2||[]).push([[6174],{1990:(e,t,n)=>{"use strict";n.d(t,{o:()=>u});var a=n(7294),l=n(8197),i=n.n(l),o=n(4077),s=n(7346);const r="template_i7AN",p="result_zWjO";i().templateSettings.strip=!1,i().templateSettings.varname="tps";const u=e=>{let{templateName:t="Dot Template",children:n,tps:l={},result:i=!0,templateMeta:u="",resultMeta:d="",lang:c="text"}=e;const m=n.props.children.props.children,h=(0,s.V)({templateString:m,tps:l});return a.createElement("div",null,a.createElement(o.Z,{className:r,showLineNumbers:!0,title:t,language:c,metastring:u},m),i&&a.createElement(o.Z,{title:"Result",className:p,language:c,metastring:d},`${h}`))}},6539:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var a=n(7294),l=n(4673);const i=e=>{let{children:t,open:n=!1,title:i=""}=e;const o=i?`Example: ${i}`:"Example";return a.createElement(l.Z,{summary:o,open:n},a.createElement("div",null,t))}},5162:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(7294),l=n(6010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{"use strict";n.d(t,{Z:()=>x});var a=n(7462),l=n(7294),i=n(6010),o=n(2466),s=n(6550),r=n(1980),p=n(7392),u=n(12);function d(e){return function(e){return l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:l}}=e;return{value:t,label:n,attributes:a,default:l}}))}function c(e){const{values:t,children:n}=e;return(0,l.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,r._X)(i),(0,l.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(a.location.search);t.set(i,e),a.replace({...a.location,search:t.toString()})}),[i,a])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,i=c(e),[o,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[r,p]=h({queryString:n,groupId:a}),[d,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,i]=(0,u.Nk)(n);return[a,(0,l.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:a}),k=(()=>{const e=r??d;return m({value:e,tabValues:i})?e:null})();(0,l.useLayoutEffect)((()=>{k&&s(k)}),[k]);return{selectedValue:o,selectValue:(0,l.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),f(e)}),[p,f,i]),tabValues:i}}var k=n(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:s,selectValue:r,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,o.o5)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==s&&(d(t),r(a))},m=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:c},o,{className:(0,i.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":s===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:a}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function N(e){const t=f(e);return l.createElement("div",{className:(0,i.Z)("tabs-container",g.tabList)},l.createElement(y,(0,a.Z)({},e,t)),l.createElement(v,(0,a.Z)({},e,t)))}function x(e){const t=(0,k.Z)();return l.createElement(N,(0,a.Z)({key:String(t)},e))}},7346:(e,t,n)=>{"use strict";n.d(t,{V:()=>r});var a=n(7294),l=n(8197),i=n.n(l),o=n(527);i().templateSettings.strip=!1,i().templateSettings.varname="tps";const s={name:"App",answers:{},utils:o,u:o},r=e=>{let{templateString:t,tps:n={},defs:l={}}=e;const[o,r]=(0,a.useState)(null);return(0,a.useEffect)((()=>{let e;try{e=i().template(t,null,l)({...s,...n})}catch(a){e=`Error: ${a.message}`}r(e)}),[t,n]),o}},6922:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var a=n(7294);const l={name:"App",utils:n(527)},i={React:a,...a,tps:l}},268:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>k,frontMatter:()=>p,metadata:()=>d,toc:()=>m});var a=n(7462),l=(n(7294),n(3905)),i=n(6539),o=n(1990),s=n(4866),r=n(5162);const p={pagination_next:"main/create-new-template/settings",pagination_prev:"main/create-new-template/packages",sidebar_position:3},u="Dynamic Files",d={unversionedId:"main/create-new-template/dynamic-files",id:"main/create-new-template/dynamic-files",title:"Dynamic Files",description:"Dynamic files breakdown",source:"@site/docs/main/create-new-template/dynamic-files.mdx",sourceDirName:"main/create-new-template",slug:"/main/create-new-template/dynamic-files",permalink:"/templates/docs/main/create-new-template/dynamic-files",draft:!1,editUrl:"https://github.com/marcellino-ornelas/templates/tree/master/docs/docs/main/create-new-template/dynamic-files.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{pagination_next:"main/create-new-template/settings",pagination_prev:"main/create-new-template/packages",sidebar_position:3},sidebar:"docs",previous:{title:"Packages",permalink:"/templates/docs/main/create-new-template/packages"},next:{title:"Settings File",permalink:"/templates/docs/main/create-new-template/settings"}},c={},m=[{value:"Dynamic files breakdown",id:"dynamic-files-breakdown",level:2},{value:"What is a dynamic file",id:"what-is-a-dynamic-file",level:3},{value:"What is doT",id:"what-is-dot",level:3},{value:"How to use doT",id:"how-to-use-dot",level:2},{value:"Evaluation",id:"evaluation",level:3},{value:"Interpolation",id:"interpolation",level:3},{value:"Conditionals",id:"conditionals",level:3},{value:"Loops",id:"loops",level:3},{value:"Defs (Partials)",id:"defs-partials",level:3},{value:"How to use doT with Templates",id:"how-to-use-dot-with-templates",level:2},{value:"File names",id:"file-names",level:3},{value:"File contents",id:"file-contents",level:3},{value:"Def files",id:"def-files",level:3},{value:"single def file",id:"single-def-file",level:4},{value:"multiple def functions inside a file",id:"multiple-def-functions-inside-a-file",level:4},{value:"Templates Context",id:"templates-context",level:2},{value:"Name",id:"name",level:3},{value:"Packages",id:"packages",level:3},{value:"utils",id:"utils",level:3}],h={toc:m},f="wrapper";function k(e){let{components:t,...n}=e;return(0,l.kt)(f,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"dynamic-files"},"Dynamic Files"),(0,l.kt)("h2",{id:"dynamic-files-breakdown"},"Dynamic files breakdown"),(0,l.kt)("h3",{id:"what-is-a-dynamic-file"},"What is a dynamic file"),(0,l.kt)("p",null,"Tps goes beyond simple copy and paste functionality; it enables the existence of\na more versatile and powerful system. When working with reusable concepts, the\nability to incorporate additional information becomes essential. This is where\ndynamic files come into play."),(0,l.kt)("p",null,"Dynamic files reside within your template's package folders, much like any other\nfile. However, dynamic files undergo a different processing procedure. Tps reads\nthe contents of dynamic files, which are then processed by a templating language\ncalled ",(0,l.kt)("a",{parentName:"p",href:"http://olado.github.io/doT/index.html"},"doT"),"."),(0,l.kt)("mermaid",{value:'graph LR;\n\tstep1("User renders\n\t\ttemplate")\n\tstep2("Tps loads all files and\n\t\tfolders from each\n\t\trequired package")\n\tstep3("Dymanic files")\n\tstep4("All other files/folders")\n\tstep5("Copy/paste")\n\tstep6("DoT template engine")\n\tstep7("New instance\n\t\tof template created")\n    step1--\x3estep2;\n    step2--\x3estep3;\n    step2--\x3estep4;\n    step4--\x3estep5;\n    step5--\x3estep7;\n\tstep3--\x3estep6;\n\tstep6--\x3estep7;'}),(0,l.kt)("h3",{id:"what-is-dot"},"What is doT"),(0,l.kt)("p",null,"DoT is based on JavaScript and uses ",(0,l.kt)("inlineCode",{parentName:"p"},"{{}}")," brackets for interpolation. doT is a\ntemplating language similar to popular options like Handlebars, EJS, or Jade. It\nprovides various types of interpolation, including loops, conditionals, and\nmore. You can use any valid JavaScript code inside these brackets."),(0,l.kt)("p",null,"To learn more about doT, you can visit its documentation. However, let's\nintroduce you to the basics here."),(0,l.kt)("admonition",{type:"danger"},(0,l.kt)("p",{parentName:"admonition"},"It's important to consider that not all JavaScript features may be supported\nacross different computers or versions of Node when running these templates. As\na result, certain JavaScript functionality may not work as expected or behave\ndifferently.")),(0,l.kt)("h2",{id:"how-to-use-dot"},"How to use doT"),(0,l.kt)("p",null,"Like mentioned before doT uses ",(0,l.kt)("inlineCode",{parentName:"p"},"{{}}")," brackets. Here are some common ways on how\nyou can use doT"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"when it comes to creating complex templates, you may encounter a need to indent\nthe dot syntax to improve readability. However, be aware that this can cause\nunexpected issues with the appearance of the rendered template. While the\nindented structure may look good in the template itself, when the dot processes\nthese files, it doesn't recognize or handle the indentation properly. This has\nbeen my experience with using it, and you can find more detailed information\nabout this issue in the following link:\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/marcellino-ornelas/templates/issues/7"},"https://github.com/marcellino-ornelas/templates/issues/7"))),(0,l.kt)("h3",{id:"evaluation"},"Evaluation"),(0,l.kt)("p",null,"In doT, evaluation is achieved using ",(0,l.kt)("inlineCode",{parentName:"p"},"{{ <expression>}}"),". The expression can be\nany valid JavaScript code, enabling the creation of variables, functions, and\nvarious other possibilities. ",(0,l.kt)("strong",{parentName:"p"},"The semi-colon at the end of the expression is\nmandatory!")),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'{{const name = "Marcellino Ornelas";}}\n'))),(0,l.kt)("p",null,"One limitation of evaluations are that it leaves a empty space where it was\nplaced at. We recommend avoid using as much as possible but could be useful in\nsome cases"),(0,l.kt)(i.e,{title:"Evaluations leaves new line",mdxType:"Example"},(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'// highlight-next-line\n{{const name = "john doe";}}\nhey\n')))),(0,l.kt)("h3",{id:"interpolation"},"Interpolation"),(0,l.kt)("p",null,"In doT, interpolation is achieved using ",(0,l.kt)("inlineCode",{parentName:"p"},"{{= <expression>}}"),". This syntax allows\nthe result of the specified expression to replace the brackets in the template."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{= 2 + 2}}\n"))),(0,l.kt)("h3",{id:"conditionals"},"Conditionals"),(0,l.kt)("p",null,"In doT, interpolation is achieved using ",(0,l.kt)("inlineCode",{parentName:"p"},"{{? <expression>}} ... {{?}}"),". The\nresult of the provided expression will be displayed if the expression returns\ntruthy value"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Are you there?\n{{? 1 === 1}}\nI am here\n{{?}}\n"))),(0,l.kt)("p",null,"If you dont want the extra new lines, move all the conditional statements to one\nline"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Are you there?\n{{? 1 === 1}}I am here{{?}}\n"))),(0,l.kt)("p",null,"If you want everthing to flow on one line then just put the condition on the\nsame line"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Are you there? {{? 1 === 1}}I am here{{?}}\n"))),(0,l.kt)("p",null,"doT also supports else statements."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Are you here? {{? 1 === 2}}I am here {{??}}I am not home {{?}}\n"))),(0,l.kt)("p",null,"doT also supports else if statements."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Are you here? {{? 1===2}}I am here {{?? 1 ===1}}I might be home{{??}}I am not home {{?}}\n"))),(0,l.kt)("p",null,"One limitation of conditionals is that it leaves a white space behind when the\ncondition is not met"),(0,l.kt)(o.o,{resultMeta:"{2}",mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Are you there?\n{{? 1 === 2}}I am here{{?}}\nhow about now?\n"))),(0,l.kt)("p",null,"The only way around this right now is placing the condition on the same line but\nadding a new line to the begining of the value"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'Are you there?{{? 1 === 1}}{{="\\n"}}I am here{{?}}\nhow about now?{{? 1 === 2}}{{="\\n"}}I am here{{?}}\n'))),(0,l.kt)("p",null,"Notice how the first condition value still showed up on a new line but the\nsecond condition didnt leave a new line"),(0,l.kt)("h3",{id:"loops"},"Loops"),(0,l.kt)("p",null,"In doT, loops is achieved using ",(0,l.kt)("inlineCode",{parentName:"p"},"{{~<array> :value:index}}{{= value}}{{~}}"),"."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{~[1, 2, 3, 4] :value:index}}\n{{= value}}\n{{~}}\n"))),(0,l.kt)("p",null,"Unfortunately we need to keep all tags on the same line to get a cleaner output.\nBy indenting ",(0,l.kt)("inlineCode",{parentName:"p"},"{{= value}}")," to get a cleaner look will result in indent in the\nrendered output"),(0,l.kt)(i.e,{title:"Indent Issues",mdxType:"Example"},(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{~[1, 2, 3, 4] :value:index}}\n    {{= value}}\n{{~}}\n")))),(0,l.kt)("p",null,"If you dont want the extra spacing between each line then you need to move\n",(0,l.kt)("inlineCode",{parentName:"p"},"{{= value}}")," on the same line as your loop."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{~[1,2,3,4] :value:index}}{{= value}}\n{{~}}\n"))),(0,l.kt)("p",null,"To remove the extra space at the bottom of the output, you can move the end of\nthe loop to the same line. However, this will cause all your items to be\ndisplayed on a single line. To address this, you can add a ",(0,l.kt)("inlineCode",{parentName:"p"},"\\n")," character after\neach value. To avoid displaying a new line after the last item, you can use a\nternary operator to check if it is the last item."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'{{~[1,2,3,4] :value:index}}{{= value + (index !== [1,2,3,4].length - 1 ? "\\n" : "")}}{{~}}\n'))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If you dont need anything to complex, then use ",(0,l.kt)("inlineCode",{parentName:"p"},"join"),"!"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-text"},'{{= [1,2,3,4].join("\\n")}}\n')))),(0,l.kt)("p",null,"If you would like to keep output on one line then put all doT brackets on one\nline"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{~[1, 2, 3, 4] :value:index}}{{= value}}{{~}}\n"))),(0,l.kt)("h3",{id:"defs-partials"},"Defs (Partials)"),(0,l.kt)("p",null,"DoT supports defs (partials). Defs allow you to create reusable sections of a\ntemplates. Think of them as smaller templates that can be defined separately and\nthen included within larger templates. This provides modularity and simplifies\nthe process of maintaining and updating your templates."),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{##def.intro:\nThis is my intro\n#}}\n\n{{#def.intro}}\n"))),(0,l.kt)("p",null,"You can also define functions as defs"),(0,l.kt)(o.o,{mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{##def.intro = function(name) {\n        return `This is my intro`;\n}#}}\n\n{{#def.intro()}}\n"))),(0,l.kt)("h2",{id:"how-to-use-dot-with-templates"},"How to use doT with Templates"),(0,l.kt)("p",null,"Templates make it easy to use the doT template engine inside files. This helps\nyou add dynamic content to your files. To use doT inside your templates files,\nyou just need to add the ",(0,l.kt)("inlineCode",{parentName:"p"},".dot")," extension to the file. The ",(0,l.kt)("inlineCode",{parentName:"p"},".dot")," extension can\nbe added to any file, regardless of its original extension. Once added, the\ncontents of the file will be processed by doT. The resulting output will then be\nincorporated into the rendered file. Your rendered file will no longer have the\n",(0,l.kt)("inlineCode",{parentName:"p"},".dot")," extention"),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)("p",null,"To use doT in a file named ",(0,l.kt)("inlineCode",{parentName:"p"},"server.js"),", Rename the file to ",(0,l.kt)("inlineCode",{parentName:"p"},"server.js.dot"),". Once\nprocessed and rendered, the resulting file will retain its original name, which\nis ",(0,l.kt)("inlineCode",{parentName:"p"},"server.js"),".")),(0,l.kt)("h3",{id:"file-names"},"File names"),(0,l.kt)("p",null,"File names can also take advantage of using dot. By putting the\n",(0,l.kt)("inlineCode",{parentName:"p"},"{{=<some-value>}}")," in the filename you can get dynamic filenames."),(0,l.kt)(i.e,{open:!0,mdxType:"Example"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{= tps.name}}.js.dot\n")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"name")," was ",(0,l.kt)("inlineCode",{parentName:"p"},"Nav")," then the result would be:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"Nav.js\n"))),(0,l.kt)("h3",{id:"file-contents"},"File contents"),(0,l.kt)("p",null,"Like mentioned above, once you add a ",(0,l.kt)("inlineCode",{parentName:"p"},".dot")," extention to your file name you are\nnow able to use any dot syntax inside the file and tps will process it."),(0,l.kt)(i.e,{open:!0,mdxType:"Example"},(0,l.kt)(o.o,{lang:"js",templateName:"server.js.dot",tps:{answers:{security:!0}},mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'const express = require("express");\n\nconst app = express();\n\n/* node code ... */\n\n{{? tps.answers.security }}app.use(helmet());{{?}}\n\n/* node code ... */\n')))),(0,l.kt)("h3",{id:"def-files"},"Def files"),(0,l.kt)("p",null,"Templates allows you to define doT defs inside files for easier use. Def files\ngets loaded before any files are rendered so you have access to all defs you\ndefine inside your template files."),(0,l.kt)("p",null,"Def files are files inside your packages that have a ",(0,l.kt)("inlineCode",{parentName:"p"},".def")," extension."),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"| - .tps/\n    | - react-component\n        | - default/\n            | - helpers.def\n"))),(0,l.kt)("p",null,"If you want your def files to be accessable anywhere put them inside your\n",(0,l.kt)("inlineCode",{parentName:"p"},"default")," package. If your def file is only used inside a specific package then\nplace it inside that package"),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"def files placed inside packages may be usable inside template files inside\nother packages, however this is discouraged and may not be supported in other\nversions")),(0,l.kt)("p",null,"Def files can be used in two ways:"),(0,l.kt)("h4",{id:"single-def-file"},"single def file"),(0,l.kt)("p",null,"If your def file has no dot syntax then the whole file will be converted to a\n",(0,l.kt)("inlineCode",{parentName:"p"},"def"),". You can access this def inside your template files by using\n",(0,l.kt)("inlineCode",{parentName:"p"},"{{#def.<file-name>}}")),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)("p",null,"If you had this template folder structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"| - .tps/\n    | - some-template/\n        | - default/\n            | - helpers.def\n            | - index.txt.dot\n")),(0,l.kt)("p",null,"and inside your ",(0,l.kt)("inlineCode",{parentName:"p"},"helpers.def")," you had:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"This is my def file\n")),(0,l.kt)("p",null,"and inside ",(0,l.kt)("inlineCode",{parentName:"p"},"index.txt.dot")," you had:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-txt"},"hey there\n{{#def.helpers}}\n")),(0,l.kt)("p",null,"Your rendered ",(0,l.kt)("inlineCode",{parentName:"p"},"index.txt")," file would end up like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-txt"},"hey there\nThis is my def file\n"))),(0,l.kt)("h4",{id:"multiple-def-functions-inside-a-file"},"multiple def functions inside a file"),(0,l.kt)("p",null,"You can define multiple def functions inside a def file by using the def syntax\n",(0,l.kt)("inlineCode",{parentName:"p"},"{{##def.name: ... #}"),". These def files can be accessed by the name you give\nthem in the def."),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)("p",null,"If you had this template folder structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"| - .tps/\n    | - some-template/\n        | - default/\n            | - helpers.def\n            | - index.txt.dot\n")),(0,l.kt)("p",null,"and inside your ",(0,l.kt)("inlineCode",{parentName:"p"},"helpers.def")," you had:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{##def.helper1:\nhelper 1\n#}}\n\n{{##def.helper2:\nhelper 2\n#}}\n")),(0,l.kt)("p",null,"and inside ",(0,l.kt)("inlineCode",{parentName:"p"},"index.txt.dot")," you had:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-txt"},"hey there\n{{#def.helper1}}\n{{#def.helper2}}\n")),(0,l.kt)("p",null,"Your rendered ",(0,l.kt)("inlineCode",{parentName:"p"},"index.txt")," file would end up like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-txt"},"hey there\nhelper 1\nhelper 2\n"))),(0,l.kt)("h2",{id:"templates-context"},"Templates Context"),(0,l.kt)("p",null,"After converting a file to use doT, you gain access to the templates context\nobject, which contains information about the template and rendering metadata. To\nutilize the context object, you can refer to the tps object within doT tags.\nHere's an example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{ tps }}\n")),(0,l.kt)("p",null,"Now, let's explore some of the most commonly used properties available in this\nobject. For a full list, you can refer to the\n",(0,l.kt)("a",{parentName:"p",href:"../../api/template-context"},"tps context API"),"."),(0,l.kt)("h3",{id:"name"},"Name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{= tps.name }}\n")),(0,l.kt)("p",null,"Name of new instance you are rendering. When rendering two or more instances at\nthe same time. The same concept as above apply's but for each path you pass in."),(0,l.kt)("p",null,"If you render a template with no build path. Then ",(0,l.kt)("inlineCode",{parentName:"p"},"tps.name")," will be null."),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="cli"',title:'"cli"'},"tps react-component Nav\n")),(0,l.kt)(o.o,{tps:{name:"Nav"},mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"const {{= tps.name}} = (props) => {\n    return (\n        <div></div>\n    )\n}\n")))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Dont remember what the template name is? Refresh your mind\n",(0,l.kt)("a",{parentName:"p",href:"./templates#single-build-path"},"here"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"packages"},"Packages"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{= tps.packages }}\n")),(0,l.kt)("p",null,"List of packages that were used when rendering your template."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Remember ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," package is include by default")),(0,l.kt)("p",null,"When no additional packages are used:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'["default"]\n')),(0,l.kt)("p",null,"when additional packages are used:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'["default", "css", "unit-tests"]\n')),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)(s.Z,{mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"Additional packages",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="cli"',title:'"cli"'},"tps react-component App --packages css\n")),(0,l.kt)(o.o,{tps:{name:"Nav",packages:["default","css"]},lang:"js",mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'import React from react;\n{{? tps.packages.includes("css")}}import "{{= tps.name}}.css";\n{{?}}\nconst {{= tps.name}} = (props) => {\n    return (\n        <div></div>\n    )\n}\n\n')))),(0,l.kt)(r.Z,{value:"No additional packages",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="cli"',title:'"cli"'},"tps react-component App\n")),(0,l.kt)(o.o,{tps:{name:"Nav",packages:["default"]},lang:"js",mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'import React from react;\n{{? tps.packages.includes("css")}}import "{{= tps.name}}.css";\n{{?}}\nconst {{= tps.name}} = (props) => {\n    return (\n        <div></div>\n    )\n}\n\n')))))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Don't remember how to use packages? Refresh your mind ",(0,l.kt)("a",{parentName:"p",href:"./packages"},"here"))),(0,l.kt)("h3",{id:"utils"},"utils"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"{{= tps.utils }}\n")),(0,l.kt)("p",null,"Make your template creation journey more enjoyable with our collection of\nutilities. We've integrated powerful tools from\n",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/change-case"},"change-case")," and\n",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/inflection"},"inflection")," to streamline your\nworkflow."),(0,l.kt)("p",null,"here are a list of some:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#camelCase"},"camelCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#capitalCase"},"capitalCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#constantCase"},"constantCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#dotCase"},"dotCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#headerCase"},"headerCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#paramCase"},"paramCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#pascalCase"},"pascalCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#snakeCase"},"snakeCase")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#pluralize"},"pluralize")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#singularize"},"singularize")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#camelize"},"camelize")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#underscore"},"underscore")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#humanize"},"humanize")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../../api/template-context#capitalize"},"capitalize"))),(0,l.kt)("p",null,"To explore all the available functions, check out the\n",(0,l.kt)("a",{parentName:"p",href:"../../api/template-context#utils"},"tps context utils API"),"."),(0,l.kt)(i.e,{mdxType:"Example"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="cli"',title:'"cli"'},"tps react-component nav\n")),(0,l.kt)(o.o,{tps:{name:"nav",packages:["default"]},lang:"js",mdxType:"Dot"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"import React from react;\n\nconst {{= tps.utils.capitalize(tps.name)}} = (props) => {\n    return (\n        <div></div>\n    )\n}\n")))))}k.isMDXComponent=!0},8197:(e,t,n)=>{var a;!function(){"use strict";var l,i={name:"doT",version:"1.1.1",templateSettings:{evaluate:/\{\{([\s\S]+?(\}?)+)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g,encode:/\{\{!([\s\S]+?)\}\}/g,use:/\{\{#([\s\S]+?)\}\}/g,useParams:/(^|[^\w$])def(?:\.|\[[\'\"])([\w$\.]+)(?:[\'\"]\])?\s*\:\s*([\w$\.]+|\"[^\"]+\"|\'[^\']+\'|\{[^\}]+\})/g,define:/\{\{##\s*([\w\.$]+)\s*(\:|=)([\s\S]+?)#\}\}/g,defineParams:/^\s*([\w$]+):([\s\S]+)/,conditional:/\{\{\?(\?)?\s*([\s\S]*?)\s*\}\}/g,iterate:/\{\{~\s*(?:\}\}|([\s\S]+?)\s*\:\s*([\w$]+)\s*(?:\:\s*([\w$]+))?\s*\}\})/g,varname:"it",strip:!0,append:!0,selfcontained:!1,doNotSkipEncoded:!1},template:void 0,compile:void 0,log:!0};i.encodeHTMLSource=function(e){var t={"&":"&#38;","<":"&#60;",">":"&#62;",'"':"&#34;","'":"&#39;","/":"&#47;"},n=e?/[&<>"'\/]/g:/&(?!#?\w+;)|<|>|"|'|\//g;return function(e){return e?e.toString().replace(n,(function(e){return t[e]||e})):""}},l=function(){return this||(0,eval)("this")}(),e.exports?e.exports=i:void 0===(a=function(){return i}.call(t,n,t,e))||(e.exports=a);var o={append:{start:"'+(",end:")+'",startencode:"'+encodeHTML("},split:{start:"';out+=(",end:");out+='",startencode:"';out+=encodeHTML("}},s=/$^/;function r(e,t,n){return("string"==typeof t?t:t.toString()).replace(e.define||s,(function(t,a,l,i){return 0===a.indexOf("def.")&&(a=a.substring(4)),a in n||(":"===l?(e.defineParams&&i.replace(e.defineParams,(function(e,t,l){n[a]={arg:t,text:l}})),a in n||(n[a]=i)):new Function("def","def['"+a+"']="+i)(n)),""})).replace(e.use||s,(function(t,a){e.useParams&&(a=a.replace(e.useParams,(function(e,t,a,l){if(n[a]&&n[a].arg&&l){var i=(a+":"+l).replace(/'|\\/g,"_");return n.__exp=n.__exp||{},n.__exp[i]=n[a].text.replace(new RegExp("(^|[^\\w$])"+n[a].arg+"([^\\w$])","g"),"$1"+l+"$2"),t+"def.__exp['"+i+"']"}})));var l=new Function("def","return "+a)(n);return l?r(e,l,n):l}))}function p(e){return e.replace(/\\('|\\)/g,"$1").replace(/[\r\t\n]/g," ")}i.template=function(e,t,n){var a,u,d=(t=t||i.templateSettings).append?o.append:o.split,c=0,m=t.use||t.define?r(t,e,n||{}):e;m=("var out='"+(t.strip?m.replace(/(^|\r|\n)\t* +| +\t*(\r|\n|$)/g," ").replace(/\r|\n|\t|\/\*[\s\S]*?\*\//g,""):m).replace(/'|\\/g,"\\$&").replace(t.interpolate||s,(function(e,t){return d.start+p(t)+d.end})).replace(t.encode||s,(function(e,t){return a=!0,d.startencode+p(t)+d.end})).replace(t.conditional||s,(function(e,t,n){return t?n?"';}else if("+p(n)+"){out+='":"';}else{out+='":n?"';if("+p(n)+"){out+='":"';}out+='"})).replace(t.iterate||s,(function(e,t,n,a){return t?(c+=1,u=a||"i"+c,t=p(t),"';var arr"+c+"="+t+";if(arr"+c+"){var "+n+","+u+"=-1,l"+c+"=arr"+c+".length-1;while("+u+"<l"+c+"){"+n+"=arr"+c+"["+u+"+=1];out+='"):"';} } out+='"})).replace(t.evaluate||s,(function(e,t){return"';"+p(t)+"out+='"}))+"';return out;").replace(/\n/g,"\\n").replace(/\t/g,"\\t").replace(/\r/g,"\\r").replace(/(\s|;|\}|^|\{)out\+='';/g,"$1").replace(/\+''/g,""),a&&(t.selfcontained||!l||l._encodeHTML||(l._encodeHTML=i.encodeHTMLSource(t.doNotSkipEncoded)),m="var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : ("+i.encodeHTMLSource.toString()+"("+(t.doNotSkipEncoded||"")+"));"+m);try{return new Function(t.varname,m)}catch(h){throw"undefined"!=typeof console&&console.log("Could not create a template function: "+m),h}},i.compile=function(e,t){return i.template(e,null,t)}}()}}]);