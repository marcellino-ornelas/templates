/*
 * Modules
 */
{{{? tps.answers.templates }}}
import { mkTemplate } from '@test/utilities/templates';
import Templates from '@tps/templates';
import { CWD } from "@tps/utilities/constants"
import { reset, vol } from '@test/utilities/vol';
import path from "path"
{{{??}}}
// import _ from '@tps/_';
{{{?}}}
{{{? tps.answers.templates }}}

jest.mock('fs');
{{{?}}}

describe('{{= tps.utils.sentenceCase(tps.name)}}', () => {
	{{{? tps.answers.templates }}}
	beforeEach(() => {
		// jest.resetAllMocks();
		reset();
	});
	{{{?}}}

	it('should ...', async () => {
		{{{? tps.answers.templates }}}
		const templateName = "{{= tps.utils.paramCase(tps.name)}}";
		
		mkTemplate(templateName)

		const tps = await Templates.get(templateName);
		
		await tps.render(CWD, "App");

		// @ts-expect-error no types for extending jest functions
		expect(path.join(CWD, "App")).toBeDirectory();
		{{{?}}}
	});
});
